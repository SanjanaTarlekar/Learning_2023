Day3

L1
1.Write a program to print the given pattern below using 3 functions (1st to accept n and to print from 1 to n, 2nd to accept n and print spaces in between, 3rd to accept the n and print from n to 1)
1234554321
1234    4321
123        321
12            21
1                1

Concepts to be used.
- Loops
Ans-

#include <stdio.h>

void printNumbers(int n) {
    for (int i = 1; i <= n; i++) {
        printf("%d", i);
    }
}

void printSpaces(int n) {
    for (int i = 1; i <= n; i++) {
        printf(" ");
    }
}

void printReverseNumbers(int n) {
    for (int i = n; i >= 1; i--) {
        printf("%d", i);
    }
}

int main() {
    int n;
    printf("Enter the value of n: ");
    scanf("%d", &n);

    for (int i = n; i >= 1; i--) {
        printNumbers(i);
        printSpaces(2 * (n - i));
        printReverseNumbers(i);
        printf("\n");
    }

    return 0;
}

2. Prints Bits:
Scan a 32bit integer and prints its bits.

Concepts to be used.
- Loops
- Bitwise Operators
Ans-

#include <stdio.h>

void printBits(int num) 
{
    int i;
    unsigned int mask = 1 << 31;  
    for (i = 0; i < 32; i++) {
        if (num & mask) {
            printf("1");
        } else {
            printf("0");
        }

        mask >>= 1; 
    }
}

int main() {
    int num;

    printf("Enter a 32-bit integer: ");
    scanf("%d", &num);

    printf("Binary representation: ");
    printBits(num);
    printf("\n");

    return 0;
}

4. Find the largest number by deleting single digit in a 4 digit number 5872 - 872, 9856 - 986

Concepts to be used.
- Loops
- Operators
Ans-
#include <stdio.h>

int findLargestNumber(int num) 
{
    int largestNum = 0;
    char strNum[5];
    sprintf(strNum, "%d", num);

    for (int i = 0; i < 4; i++) 
{      
        int newNum = 0;
        for (int j = 0; j < 4; j++) 
{
            if (j != i) 
    {
     newNum = newNum * 10 + (strNum[j] - '0');
    }
}

        if (newNum > largestNum) 
   {
            largestNum = newNum;
   }
}

    return largestNum;
}

int main() {
    int num;

    printf("Enter a 4-digit number: ");
    scanf("%d", &num);

    int largestNum = findLargestNumber(num);

    printf("Largest number by deleting a single digit: %d\n", largestNum);

    return 0;
}

5. Write a program to find both smallest and largest digits in given n numbers
For example let's say we have n = 3, and n1 = 8, n2 = 156, n3 = 123450, the result will be "Not Valid", 1 and 6, 0 and 5
Ans-
#include <stdio.h>
#include <limits.h>

void findSmallestAndLargestDigits(int n, ...) 
{
    va_list args;
    va_start(args, n);

    int smallestDigit = INT_MAX;
    int largestDigit = INT_MIN;

    for (int i = 0; i < n; i++) 
{
        int num = va_arg(args, int);
        int temp = num;
}
        while (temp != 0) 
{
            int digit = temp % 10;
            if (digit < smallestDigit) 
{
                smallestDigit = digit;
            }
            if (digit > largestDigit) 
{
                largestDigit = digit;
            }

            temp /= 10;
        }
    }

    va_end(args);

    if (smallestDigit == INT_MAX || largestDigit == INT_MIN) {
        printf("Not Valid\n");
    } else 
{
        printf("Smallest Digit: %d\n", smallestDigit);
        printf("Largest Digit: %d\n", largestDigit);
}
}

int main() 
{
    findSmallestAndLargestDigits(3, 8, 156, 123450);
    return 0;
}


L2

1.https://1.bp.blogspot.com/-Tfj_D_f_AF0/VZO5QIIGAUI/AAAAAAAAAmI/5Rw6uIU3EiI/s1600/DS1307%2BTime%2BKeeper%2BRegister.PNG
DS1307 has its time registers in BCD format as shown in the image found in the above link, so 
a. Write a function to Set, clear and toggle bit of an 8-bit number

Concepts to be used.
- Operators
Ans-
#include <stdio.h>

unsigned char setBit(unsigned char num, int position) {
    return num | (1 << position);
}

unsigned char clearBit(unsigned char num, int position) {
    return num & ~(1 << position);
}

unsigned char toggleBit(unsigned char num, int position) {
    return num ^ (1 << position);
}

int main() {
    unsigned char num = 0b01010101; 
    printf("Original number: 0x%02X\n", num);
    printf("Setting bit at position 3: 0x%02X\n", setBit(num, 3));
    printf("Clearing bit at position 5: 0x%02X\n", clearBit(num, 5));
    printf("Toggling bit at position 2: 0x%02X\n", toggleBit(num, 2));

    return 0;
}

2.https://1.bp.blogspot.com/-Tfj_D_f_AF0/VZO5QIIGAUI/AAAAAAAAAmI/5Rw6uIU3EiI/s1600/DS1307%2BTime%2BKeeper%2BRegister.PNG
DS1307 has its time registers in BCD format as shown in the image found in the above link, To set the time we need to convert the decimal number to BCD format, hence, write a fucntion to convert decimal to BCD

Concepts to be used.
- Operators
- Preprocessor
Ans-
#include <stdio.h>

#define DECIMAL_TO_BCD(num) (((num / 10) << 4) | (num % 10))

void decimalToBCD(unsigned char decimalNum, unsigned char *bcdNum) {
    *bcdNum = DECIMAL_TO_BCD(decimalNum);
}

int main() {
    unsigned char decimalNum = 37; 
    unsigned char bcdNum;

    decimalToBCD(decimalNum, &bcdNum);

    printf("Decimal Number: %d\n", decimalNum);
    printf("BCD Number: 0x%02X\n", bcdNum);

    return 0;
}
